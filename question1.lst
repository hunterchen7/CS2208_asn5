


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             Asn5, CODE, READONLY
    2 00000000                 ENTRY
    3 00000000 E28F0034        ADR              r0,UPC      ; point r0 to UPC, 
                                                            address of the curr
                                                            ent character from 
                                                            the UPC being acces
                                                            sed
    4 00000004 E59F103C        LDR              r1,=-0x480  ; check sum, -0x480
                                                             accounts for the 0
                                                            x30s in front of ou
                                                            r ascii numerals, w
                                                            e add 6*0x30*3 for 
                                                            even bytes, 6*0x30 
                                                            for odd bytes, 6*0x
                                                            30*3+6*0x30 = 0x480
                                                             = 1152 
    5 00000008 E280200C        ADD              r2,r0,#12   ; put where the loo
                                                            p finishes into r2,
                                                             12 characters tota
                                                            l, 6 odd, 6 even
    6 0000000C E4D04001 
                       Sum     LDRB             r4,[r0],#1  ; put even number i
                                                            n r4 0,2,4,6,8,10, 
                                                            then index UPC poin
                                                            ter by 1
    7 00000010 E4D05001        LDRB             r5,[r0],#1  ; put odd number in
                                                             r5 1,3,5,7,9,11, t
                                                            hen index UPC point
                                                            er by 1
    8 00000014 E0844084        ADD              r4,r4,r4,LSL#1 ; multiply the e
                                                            ven number (r4) by 
                                                            3, r4 + 2*r4 = 3*r4
                                                            
    9 00000018 E0811004        ADD              r1,r1,r4    ; add evens to chec
                                                            k sum
   10 0000001C E0811005        ADD              r1,r1,r5    ; add odds to check
                                                             sum, note that the
                                                             check digit is inc
                                                            luded here and adde
                                                            d as an odd number
   11 00000020 E1500002        CMP              r0,r2       ; check if we're st
                                                            ill in the loop
   12 00000024 1AFFFFF8        BNE              Sum         ; continue looping 
                                                            if r0 is not equal 
                                                            to r2, i.e. pointer
                                                             doesn't point to t
                                                            he end
   13 00000028 E3A00002        MOV              r0,#2       ; set r0 to a defau
                                                            lt value of false
   14 0000002C E251100A 
                       Mod10   SUBS             r1,r1,#10   ; subtract 10 from 
                                                            r1 and set flags, l
                                                            ooking for Z flag t
                                                            o set r0 to 1, and 
                                                            N flag to exit loop
                                                            
   15 00000030 03A00001        MOVEQ            r0,#1       ; set r0 to true if
                                                             we have r1 = 0, wh
                                                            ich means the check



ARM Macro Assembler    Page 2 


                                                             sum is divisible b
                                                            y 10
   16 00000034 5AFFFFFC        BPL              Mod10       ; continue the loop
                                                             while r1 is positi
                                                            ve or 0, which mean
                                                            s exit when negativ
                                                            e
   17 00000038 EAFFFFFE 
                       Loop    B                Loop
   18 0000003C 30 36 37 
              30 30 30 
              31 30 34 
              30 31 35 UPC     DCB              "067000104015" ; UPC code
   19 00000048                 END
              FFFFFB80 
Command Line: --debug --xref --bi --apcs=interwork --depend=.\question1.d -o.\q
uestion1.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include --predefine="__EV
AL SETA 1" --list=.\question1.lst question1.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Asn5 00000000

Symbol: Asn5
   Definitions
      At line 1 in file question1.s
   Uses
      None
Comment: Asn5 unused
Loop 00000038

Symbol: Loop
   Definitions
      At line 17 in file question1.s
   Uses
      At line 17 in file question1.s
Comment: Loop used once
Mod10 0000002C

Symbol: Mod10
   Definitions
      At line 14 in file question1.s
   Uses
      At line 16 in file question1.s
Comment: Mod10 used once
Sum 0000000C

Symbol: Sum
   Definitions
      At line 6 in file question1.s
   Uses
      At line 12 in file question1.s
Comment: Sum used once
UPC 0000003C

Symbol: UPC
   Definitions
      At line 18 in file question1.s
   Uses
      At line 3 in file question1.s
Comment: UPC used once
5 symbols
338 symbols in table
